name: CI-CD
on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:


  deploy:
    needs: CI
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # ... (comandos de pull, stop/rm de containers e criação de rede - sem alterações) ...

            # Execução do contêiner do banco de dados (seu próprio DB)
            docker run -d --name fake-shop-db --network rede-da-sheila -e POSTGRES_USER=ecommerce -e POSTGRES_PASSWORD=Pg1234 -e POSTGRES_DB=ecommerce -p 8214:5432 postgres:15

            # Script de espera robusto para o banco de dados
            echo "DEBUG: Aguardando o banco de dados 'fake-shop-db' ficar disponível na porta 5432..."
            until docker exec fake-shop-db pg_isready -h localhost -p 5432 -U ecommerce; do
              echo "DEBUG: Banco de dados não está pronto ainda. Tentando novamente em 5 segundos..."
              sleep 5
            done
            echo "DEBUG: Banco de dados 'fake-shop-db' está pronto!"

            # OBTER O IP INTERNO DO fake-shop-db
            DB_IP=$(docker inspect -f '{{.NetworkSettings.Networks.rede_da_sheila.IPAddress}}' fake-shop-db)
            echo "DEBUG: IP interno do fake-shop-db: $DB_IP" # Para depuração no log do workflow

            # EXECUTAR MIGRAÇÕES DO BANCO DE DADOS
            # Usando o IP direto do DB e FLASK_APP
            docker run --rm --network rede-da-sheila \
              --env-file /home/fiona/.env \
              -e FLASK_APP=index.py \
              -e DB_HOST=$DB_IP \
              sheila421/fake-shop-app:latest flask db upgrade
            MIGRATION_STATUS=$? # Captura o status de saída do comando de migração
            if [ $MIGRATION_STATUS -ne 0 ]; then
              echo "ERRO: Migrações do banco de dados falharam! Verifique os logs da execução do workflow para mais detalhes."
              exit $MIGRATION_STATUS # Falha o passo do workflow se a migração falhar
            fi

            # Execução do contêiner da aplicação principal
            # Ele continua usando DB_HOST=fake-shop-db do seu .env
            docker run -d --name fake-shop-app --network rede-da-sheila --env-file /home/fiona/.env -p 8213:8213 sheila421/fake-shop-app:latest /app/entrypoint.sh

            # ADICIONADO: Um pequeno atraso para dar tempo do contêiner iniciar e poder rodar comandos de debug
            sleep 5

            # CAPTURA AS VARIÁVEIS DE AMBIENTE DENTRO DO CONTÊINER E SALVA EM ARQUIVO
            docker exec fake-shop-app env > /tmp/app_env_vars.txt
            # CAPTURA OS LOGS DO CONTÊINER E SALVA EM ARQUIVO
            docker logs fake-shop-app > /tmp/app_logs.txt

            echo "DEBUG: Logs e variáveis de ambiente salvos em /tmp/app_logs.txt e /tmp/app_env_vars.txt no servidor."
            echo "DEBUG: Acesse o servidor via SSH e use 'cat /tmp/app_env_vars.txt' e 'cat /tmp/app_logs.txt' para verificar."