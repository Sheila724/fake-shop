name: CI/CD com SonarQube

on:
  push:
    branches:
      - main

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Build e push da imagem Docker
        run: |
          docker build -t fake-shop-app .
          docker tag fake-shop-app ${{ secrets.DOCKER_USERNAME }}/fake-shop-app:latest
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/fake-shop-app:latest

  sonar-analysis:
    needs: CI
    runs-on: ubuntu-latest
    steps:
      - name: Executar análise SonarQube no servidor
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker network create rede-da-sheila || true

            docker run --name sonarqube-fake-shop --network rede-da-sheila -d -p 8212:9000 sonarqube:lts

            echo "Aguardando inicialização do SonarQube..."
            for i in {1..30}; do
              if docker logs sonarqube-fake-shop 2>&1 | grep -q "SonarQube is operational"; then
                echo "SonarQube está pronto!"
                break
              fi
              echo "Aguardando... ($i/30)"
              sleep 10
            done

            echo "Gerando token temporário do SonarQube..."
            TOKEN=$(curl -s -u admin:admin -X POST "http://localhost:8212/api/user_tokens/generate" -d "name=github-action-token" | grep -oP '"token":"\K[^"]+')

            if [ -z "$TOKEN" ]; then
              echo "Falha ao gerar token do SonarQube"
              docker stop sonarqube-fake-shop
              docker rm sonarqube-fake-shop
              exit 1
            fi

            echo "Token gerado com sucesso."

            docker run --rm \
              --network rede-da-sheila \
              -v "$(pwd):/usr/src" \
              -u "0:0" \
              -e SONAR_USER_HOME=/tmp/.sonar-scanner \
              sonarsource/sonar-scanner-cli \
              -Dsonar.projectKey=fake-shop-app \
              -Dsonar.projectName="Fake Shop App" \
              -Dsonar.projectVersion=1.0 \
              -Dsonar.sources=. \
              -Dsonar.sourceEncoding=UTF-8 \
              -Dsonar.host.url=http://sonarqube-fake-shop:9000 \
              -Dsonar.login="$TOKEN" \
              -Dsonar.qualitygate.wait=true

            docker stop sonarqube-fake-shop
            docker rm sonarqube-fake-shop

  deploy:
    needs: sonar-analysis
    runs-on: ubuntu-latest
    steps:
      - name: Deploy da aplicação no servidor
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/fake-shop-app:latest
            docker stop fake-shop-container || true
            docker rm fake-shop-container || true
            docker run -d --name fake-shop-container --network rede-da-sheila -p 80:3000 ${{ secrets.DOCKER_USERNAME }}/fake-shop-app:latest
